{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/slicemasters.js"],"names":["PaginationStyles","styled","div","Pagination","pageSize","totalCount","currentPage","base","skip","totalPage","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","disabled","to","Array","from","length","map","_","i","className","SliceMastersGrid","SliceMastersStyles","SliceMasters","allSanityPerson","data","pageContext","sliceMasters","SEO","title","current","parseInt","process","person","key","id","slug","name","fluid","image","asset","description"],"mappings":"wKAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,iVAqDPE,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,YAAmBC,GAAW,EAAjBC,KAAiB,EAAXD,MACvDE,EAAYC,KAAKC,KAAKN,EAAaD,GAEnCQ,EAAWN,EAAc,EACzBO,EAAWP,EAAc,EACzBQ,EAAcD,GAAYJ,EAC1BM,EAAcH,GAAY,EAEhC,OACE,kBAACZ,EAAD,KACE,kBAAC,IAAD,CAAMgB,UAAWD,EAAaE,GAAOV,EAAL,IAAaK,GAA7C,UAGCM,MAAMC,KAAK,CAAEC,OAAQX,IAAaY,KAAI,SAACC,EAAGC,GAAJ,OACrC,kBAAC,IAAD,CACEC,UAA2B,IAAhBlB,GAA2B,IAANiB,EAAU,UAAY,GACtDN,GAAOV,EAAL,KAAagB,EAAI,EAAIA,EAAI,EAAI,KAE9BA,EAAI,MAGT,kBAAC,IAAD,CAAMP,UAAWF,EAAaG,GAAOV,EAAL,IAAaM,GAA7C,Y,YC3CAY,EAAmBxB,IAAOC,IAAV,qFAAGD,CAAH,sFAMhByB,EAAqBzB,IAAOC,IAAV,uFAAGD,CAAH,2TAwDT0B,UA9BM,SAAC,GAAgD,IAAtCC,EAAqC,EAA7CC,KAAQD,gBAAmBE,EAAkB,EAAlBA,YACzCC,EAAiBH,EAAjBG,aACR,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAK,wBAAyBH,EAAYI,SAAW,KAE1D,kBAAC,EAAD,CACE9B,SAAU+B,SAASC,KACnB/B,WAAYuB,aAAF,EAAEA,EAAiBvB,WAC7BC,aAAawB,aAAA,EAAAA,EAAaI,UAAW,EACrC1B,KAAMsB,aAAF,EAAEA,EAAatB,KACnBD,KAAK,kBAEP,kBAACkB,EAAD,KACGM,EAAaV,KAAI,SAAAgB,GAAM,OACtB,kBAACX,EAAD,CAAoBY,IAAKD,EAAOE,IAC9B,kBAAC,IAAD,CAAMtB,GAAE,gBAAkBoB,EAAOG,KAAKN,SACpC,4BACE,0BAAMV,UAAU,QAAQa,EAAOI,QAGnC,kBAAC,IAAD,CAAOC,MAAOL,EAAOM,MAAMC,MAAMF,QACjC,uBAAGlB,UAAU,eAAea,EAAOQ","file":"component---src-pages-slicemasters-js-9358ab8b8a2a6b904de5.js","sourcesContent":["import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationStyles = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-items: center;\r\n  border-radius: 5px;\r\n  border: 1px solid var(--grey);\r\n  margin: 2rem 0;\r\n  text-align: center;\r\n  & > * {\r\n    padding: 1rem;\r\n    flex: 1;\r\n    border-right: 1px solid var(--grey);\r\n    text-decoration: none;\r\n    &[aria-current],\r\n    &.current {\r\n      color: var(--red);\r\n    }\r\n    &[disabled] {\r\n      pointer-events: none;\r\n      color: var(--grey);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Pagination = ({ pageSize, totalCount, currentPage, skip, base }) => {\r\n  const totalPage = Math.ceil(totalCount / pageSize);\r\n\r\n  const prevPage = currentPage - 1;\r\n  const nextPage = currentPage + 1;\r\n  const hasNextPage = nextPage <= totalPage;\r\n  const hasPrevPage = prevPage >= 1;\r\n\r\n  return (\r\n    <PaginationStyles>\r\n      <Link disabled={!hasPrevPage} to={`${base}/${prevPage}`}>\r\n        &#x2190; prev\r\n      </Link>\r\n      {Array.from({ length: totalPage }).map((_, i) => (\r\n        <Link\r\n          className={currentPage === 1 && i === 0 ? 'current' : ''}\r\n          to={`${base}/${i > 0 ? i + 1 : ''}`}\r\n        >\r\n          {i + 1}\r\n        </Link>\r\n      ))}\r\n      <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}>\r\n        &#x2192; next\r\n      </Link>\r\n    </PaginationStyles>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { Link } from 'gatsby';\r\nimport React from 'react';\r\nimport Image from 'gatsby-image';\r\nimport styled from 'styled-components';\r\nimport Pagination from '../components/Pagination';\r\nimport SEO from '../components/SEO';\r\n\r\nconst SliceMastersGrid = styled.div`\r\n  display: grid;\r\n  gap: 2rem;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n`;\r\n\r\nconst SliceMastersStyles = styled.div`\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  .gatsby-image-wrapper {\r\n    height: 400px;\r\n  }\r\n  h2 {\r\n    transform: rotate(-2deg);\r\n    font-size: 4rem;\r\n    text-align: center;\r\n    margin-bottom: -2rem;\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n  .description {\r\n    background: var(--yellow);\r\n    padding: 1rem;\r\n    margin: 2rem;\r\n    margin-top: -6rem;\r\n    position: relative;\r\n    transform: rotate(1deg);\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst SliceMasters = ({ data: { allSanityPerson }, pageContext }) => {\r\n  const { sliceMasters } = allSanityPerson;\r\n  return (\r\n    <>\r\n      <SEO title={`Slicemasters - Page ${pageContext.current || 1}`} />\r\n\r\n      <Pagination\r\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\r\n        totalCount={allSanityPerson?.totalCount}\r\n        currentPage={pageContext?.current || 1}\r\n        skip={pageContext?.skip}\r\n        base='/slicemasters'\r\n      />\r\n      <SliceMastersGrid>\r\n        {sliceMasters.map(person => (\r\n          <SliceMastersStyles key={person.id}>\r\n            <Link to={`/slicemaster/${person.slug.current}`}>\r\n              <h2>\r\n                <span className='mark'>{person.name}</span>\r\n              </h2>\r\n            </Link>\r\n            <Image fluid={person.image.asset.fluid} />\r\n            <p className='description'>{person.description}</p>\r\n          </SliceMastersStyles>\r\n        ))}\r\n      </SliceMastersGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SliceMasters;\r\n\r\nexport const query = graphql`\r\n  query SliceMasters($skip: Int = 0, $pageSize: Int = 3) {\r\n    allSanityPerson(\r\n      filter: { id: { ne: \"-886c3ffb-7060-501a-9e47-3b3a429d2096\" } }\r\n      limit: $pageSize\r\n      skip: $skip\r\n    ) {\r\n      totalCount\r\n      sliceMasters: nodes {\r\n        image {\r\n          asset {\r\n            fluid(maxWidth: 410) {\r\n              ...GatsbySanityImageFluid\r\n            }\r\n          }\r\n        }\r\n        name\r\n        id\r\n        description\r\n        slug {\r\n          current\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}